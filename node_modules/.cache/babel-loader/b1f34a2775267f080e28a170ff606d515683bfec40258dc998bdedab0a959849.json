{"ast":null,"code":"var _jsxFileName = \"/Users/thessiansoundllc/Desktop/React/demo-work/src/components/Theme.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Theme = () => {\n  _s();\n  const [toggle, setToggle] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-[30px] bg-white rounded-3xl text-black border-solid border-2 hover:bg-purple-300 hover:text-white transition-all\",\n      children: \"On\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(Theme, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n_c = Theme;\nexport default Theme;\nvar _c;\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Theme","_s","toggle","setToggle","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thessiansoundllc/Desktop/React/demo-work/src/components/Theme.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Theme = () => {\n\n    const [toggle, setToggle] = useState(false)\n  return (\n    <>\n       <button className=\"px-[30px] bg-white rounded-3xl text-black border-solid border-2 hover:bg-purple-300 hover:text-white transition-all\">On</button>\n    </>\n  )\n}\n\nexport default Theme\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACGP,OAAA;MAAQQ,SAAS,EAAC,qHAAqH;MAAAD,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBACpJ,CAAC;AAEP,CAAC;AAAAR,EAAA,CARKD,KAAK;AAAAU,EAAA,GAALV,KAAK;AAUX,eAAeA,KAAK;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}